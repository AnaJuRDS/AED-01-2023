#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAX 100

typedef struct no {
    struct no* prox;
    int valor;
} TNo;

typedef struct {
    TNo* inicio;
    TNo* final;
} TDes;

// Função para imprimir os elementos da hash
void imprimeHash(TNo* inicio, int ind) {
    TNo* aux = inicio;
    printf("%d -> ", ind);
    while (aux != NULL) {
        printf("%d -> ", aux->valor);
        aux = aux->prox;
    }
    printf("\\\n");
}

// Função para inserir um nó na hash
void insereNo(TDes* vetor, int ind, int e) {
    TNo* aux = (TNo*)malloc(sizeof(TNo));
    aux->valor = e;
    aux->prox = NULL;
    if (vetor[ind].inicio == NULL)
        vetor[ind].inicio = aux;
    else
        vetor[ind].final->prox = aux;
    vetor[ind].final = aux;
}

// Função para inicializar a hash
void inicializa(TDes* vetor, int n) {
    int i;
    for (i = 0; i < n; i++) {
        vetor[i].inicio = NULL;
        vetor[i].final = NULL;
    }
}

int main() {
    TDes vetor[MAX];
    int key, num, n, e, i, j;

    scanf("%d", &n);

    for (j = 0; j < n; j++) {
        scanf("%d %d", &key, &num);
        inicializa(vetor, key);

        for (i = 0; i < num; i++) {
            scanf("%d", &e);
            insereNo(vetor, e % key, e);
        }
        for (i = 0; i < key; i++)
            imprimeHash(vetor[i].inicio, i);

        if (j + 1 < n)
            printf("\n");
    }
    return 0;
}
